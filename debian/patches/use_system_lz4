Description: Use the system liblz4 instead of something in third-party
 There is a version of liblz4 in third-party that shouldn't be used.
Author: Faidon Liambotis <paravoid@debian.org>
Forwarded: no
Last-Update: 2014-05-26

--- /dev/null
+++ b/CMake/FindLZ4.cmake
@@ -0,0 +1,20 @@
+# Finds liblz4.
+#
+# This module defines:
+# LZ4_INCLUDE_DIR
+# LZ4_LIBRARY
+#
+
+find_path(LZ4_INCLUDE_DIR NAMES lz4.h)
+find_library(LZ4_LIBRARY NAMES lz4)
+
+include(FindPackageHandleStandardArgs)
+FIND_PACKAGE_HANDLE_STANDARD_ARGS(
+    LZ4 DEFAULT_MSG
+    LZ4_LIBRARY LZ4_INCLUDE_DIR)
+
+if (NOT LZ4_FOUND)
+    message(FATAL_ERROR "Could not locate LZ4.")
+endif (NOT LZ4_FOUND)
+
+mark_as_advanced(LZ4_INCLUDE_DIR LZ4_LIBRARY)
--- a/CMake/HPHPFindLibs.cmake
+++ b/CMake/HPHPFindLibs.cmake
@@ -143,6 +143,10 @@ include_directories(${LIBZIP_INCLUDE_DIR
 find_package(LibSQLite REQUIRED)
 include_directories(${LIBSQLITE_INCLUDE_DIR})
 
+# liblz4
+find_package(LZ4 REQUIRED)
+include_directories(${LZ4_INCLUDE_DIR})
+
 # ICU
 find_package(ICU REQUIRED)
 if (ICU_FOUND)
@@ -448,9 +452,9 @@ macro(hphp_link target)
   endif()
 
   target_link_libraries(${target} ${LIBSQLITE3_LIBRARY})
+  target_link_libraries(${target} ${LZ4_LIBRARY})
 
   target_link_libraries(${target} timelib)
-  target_link_libraries(${target} lz4)
   target_link_libraries(${target} double-conversion)
   target_link_libraries(${target} folly)
   target_link_libraries(${target} zip)
--- a/third-party/CMakeLists.txt
+++ b/third-party/CMakeLists.txt
@@ -27,7 +27,6 @@ list(APPEND THIRD_PARTY_MODULES
   libafdt
   libmbfl
   timelib
-  lz4
   double-conversion
   folly)
 if(ENABLE_FASTCGI)
--- a/CMake/HPHPSetup.cmake
+++ b/CMake/HPHPSetup.cmake
@@ -160,7 +160,6 @@ include_directories("${TP_DIR}/libafdt/s
 include_directories("${TP_DIR}/libmbfl")
 include_directories("${TP_DIR}/libmbfl/mbfl")
 include_directories("${TP_DIR}/libmbfl/filter")
-include_directories("${TP_DIR}/lz4")
 include_directories("${TP_DIR}/double-conversion/src")
 include_directories("${TP_DIR}/folly")
 include_directories(${TP_DIR})
